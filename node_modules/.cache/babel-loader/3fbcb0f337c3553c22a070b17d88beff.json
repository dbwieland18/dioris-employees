{"ast":null,"code":"var _jsxFileName = \"/Users/dwieland/projects/trilogy/dioris-employees/src/componentes/table/table.js\";\nimport React from \"react\";\nimport data from \"../Data/data.json\";\nimport TableRow from \"../table/components/tableRow\";\nimport TableHeader from \"./tableHeader/tableHeader\";\nimport { EventContext } from \"../table/tableContext\";\nimport { TableContext } from \"../table/tableContext\";\nimport { AppContext } from \"../../AppContext\";\n\nfunction Table() {\n  const [sortBy, setSortBy] = React.useState(); //   const [sortOrder, setSortOrder] = React.useState();\n\n  const {\n    searchText\n  } = React.useContext(AppContext); // console.log(data)\n\n  const handleTableHeaderClick = event => {\n    const target = event.currentTarget;\n    const id = target.getAttribute(\"data-id\");\n    setSortBy(id);\n    console.log(id);\n  };\n\n  const tableContext = {\n    sortBy // sortOrder,\n\n  };\n  const eventContext = {\n    onTableHeaderClick: handleTableHeaderClick\n  };\n  let sortedData = [...data];\n\n  if (searchText !== '') {\n    sortedData = sortedData.filter(({\n      email\n    }) => new RegExp(searchText, 'g').test(email));\n  }\n\n  switch (sortBy) {\n    case \"Name\":\n      sortedData = sortedData.sort((a, b) => {\n        const aName = `${a.name.first} ${a.name.last}`;\n        const bName = `${b.name.first} ${b.name.last}`;\n        return aName.localeCompare(bName);\n      });\n      break;\n\n    case \"Email\":\n      sortedData = sortedData.sort((a, b) => a.email.localeCompare(b.email));\n      break;\n\n    case \"Phone\":\n      sortedData = sortedData.sort((a, b) => a.phone.localeCompare(b.phone));\n      break;\n\n    default:\n      break;\n  }\n\n  return /*#__PURE__*/React.createElement(TableContext.Provider, {\n    value: tableContext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(EventContext.Provider, {\n    value: eventContext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    border: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thread\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableHeader, {\n    text: \"Name\" // sort={}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TableHeader, {\n    text: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TableHeader, {\n    text: \"Phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, sortedData.map(person => /*#__PURE__*/React.createElement(TableRow, {\n    key: person.phone,\n    person: person,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  })))))));\n}\n\nexport default Table;","map":{"version":3,"sources":["/Users/dwieland/projects/trilogy/dioris-employees/src/componentes/table/table.js"],"names":["React","data","TableRow","TableHeader","EventContext","TableContext","AppContext","Table","sortBy","setSortBy","useState","searchText","useContext","handleTableHeaderClick","event","target","currentTarget","id","getAttribute","console","log","tableContext","eventContext","onTableHeaderClick","sortedData","filter","email","RegExp","test","sort","a","b","aName","name","first","last","bName","localeCompare","phone","map","person"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport data from \"../Data/data.json\";\nimport TableRow from \"../table/components/tableRow\";\nimport TableHeader from \"./tableHeader/tableHeader\";\nimport { EventContext } from \"../table/tableContext\";\nimport { TableContext } from \"../table/tableContext\";\nimport { AppContext } from \"../../AppContext\";\n\nfunction Table() {\n  const [sortBy, setSortBy] = React.useState();\n//   const [sortOrder, setSortOrder] = React.useState();\n\nconst {searchText} = React.useContext(AppContext);\n\n  // console.log(data)\n  const handleTableHeaderClick = (event) => {\n    const target = event.currentTarget;\n    const id = target.getAttribute(\"data-id\");\n    setSortBy(id);\n\n    console.log(id);\n  };\n\n  const tableContext = {\n    sortBy,\n    // sortOrder,\n  };\n\n  const eventContext = {\n    onTableHeaderClick: handleTableHeaderClick,\n  };\n\n\n  let sortedData = [...data];\n  if(searchText !== ''){\n      sortedData = sortedData.filter(({email})=> new RegExp(searchText, 'g').test(email))\n  }\n\n  switch (sortBy) {\n    case \"Name\":\n        sortedData = sortedData.sort((a, b) => {\n            const aName = `${a.name.first} ${a.name.last}`;\n            const bName = `${b.name.first} ${b.name.last}`;\n            return aName.localeCompare(bName)\n        })\n      break;\n\n    case \"Email\":\n        sortedData = sortedData.sort((a, b) => a.email.localeCompare(b.email))\n      break;\n\n    case \"Phone\":\n        sortedData = sortedData.sort((a, b) => a.phone.localeCompare(b.phone))\n      break;\n\n    default:\n      break;\n  }\n\n  return (\n    <TableContext.Provider value={tableContext}>\n      <EventContext.Provider value={eventContext}>\n        <table border={1}>\n          <thread>\n            <tr>\n              <TableHeader\n                text=\"Name\"\n                // sort={}\n              />\n              <TableHeader text=\"Email\" />\n              <TableHeader text=\"Phone\" />\n            </tr>\n          </thread>\n          <tbody>\n            <tr>\n              {sortedData.map((person) => (\n                <TableRow key={person.phone} person={person} />\n              ))}\n            </tr>\n          </tbody>\n        </table>\n      </EventContext.Provider>\n    </TableContext.Provider>\n  );\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}