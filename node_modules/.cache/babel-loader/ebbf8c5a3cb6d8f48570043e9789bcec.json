{"ast":null,"code":"import _toConsumableArray from\"/Users/dwieland/projects/trilogy/dioris-employees/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/dwieland/projects/trilogy/dioris-employees/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import data from\"../Data/data.json\";import TableRow from\"../table/components/tableRow\";import TableHeader from\"./tableHeader/tableHeader\";import{EventContext}from\"../table/tableContext\";import{TableContext}from\"../table/tableContext\";import{AppContext}from\"../../AppContext\";function Table(){var _React$useState=React.useState(),_React$useState2=_slicedToArray(_React$useState,2),sortBy=_React$useState2[0],setSortBy=_React$useState2[1];//   const [sortOrder, setSortOrder] = React.useState();\nvar _React$useContext=React.useContext(AppContext),searchText=_React$useContext.searchText;// console.log(data)\nvar handleTableHeaderClick=function handleTableHeaderClick(event){var target=event.currentTarget;var id=target.getAttribute(\"data-id\");setSortBy(id);console.log(id);};var tableContext={sortBy:sortBy// sortOrder,\n};var eventContext={onTableHeaderClick:handleTableHeaderClick};var sortedData=_toConsumableArray(data);if(searchText!==''){sortedData=sortedData.filter(function(_ref){var email=_ref.email;return new RegExp(searchText,'g').test(email);});}switch(sortBy){case\"Name\":sortedData=sortedData.sort(function(a,b){var aName=\"\".concat(a.name.first,\" \").concat(a.name.last);var bName=\"\".concat(b.name.first,\" \").concat(b.name.last);return aName.localeCompare(bName);});break;case\"Email\":sortedData=sortedData.sort(function(a,b){return a.email.localeCompare(b.email);});break;case\"Phone\":sortedData=sortedData.sort(function(a,b){return a.phone.localeCompare(b.phone);});break;default:break;}return/*#__PURE__*/React.createElement(TableContext.Provider,{value:tableContext},/*#__PURE__*/React.createElement(EventContext.Provider,{value:eventContext},/*#__PURE__*/React.createElement(\"table\",{border:1},/*#__PURE__*/React.createElement(\"thread\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(TableHeader,{text:\"Name\"// sort={}\n}),/*#__PURE__*/React.createElement(TableHeader,{text:\"Email\"}),/*#__PURE__*/React.createElement(TableHeader,{text:\"Phone\"}))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,sortedData.map(function(person){return/*#__PURE__*/React.createElement(TableRow,{key:person.phone,person:person});}))))));}export default Table;","map":{"version":3,"sources":["/Users/dwieland/projects/trilogy/dioris-employees/src/componentes/table/table.js"],"names":["React","data","TableRow","TableHeader","EventContext","TableContext","AppContext","Table","useState","sortBy","setSortBy","useContext","searchText","handleTableHeaderClick","event","target","currentTarget","id","getAttribute","console","log","tableContext","eventContext","onTableHeaderClick","sortedData","filter","email","RegExp","test","sort","a","b","aName","name","first","last","bName","localeCompare","phone","map","person"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport data from \"../Data/data.json\";\nimport TableRow from \"../table/components/tableRow\";\nimport TableHeader from \"./tableHeader/tableHeader\";\nimport { EventContext } from \"../table/tableContext\";\nimport { TableContext } from \"../table/tableContext\";\nimport { AppContext } from \"../../AppContext\";\n\nfunction Table() {\n  const [sortBy, setSortBy] = React.useState();\n//   const [sortOrder, setSortOrder] = React.useState();\n\nconst {searchText} = React.useContext(AppContext);\n\n  // console.log(data)\n  const handleTableHeaderClick = (event) => {\n    const target = event.currentTarget;\n    const id = target.getAttribute(\"data-id\");\n    setSortBy(id);\n\n    console.log(id);\n  };\n\n  const tableContext = {\n    sortBy,\n    // sortOrder,\n  };\n\n  const eventContext = {\n    onTableHeaderClick: handleTableHeaderClick,\n  };\n\n\n  let sortedData = [...data];\n  if(searchText !== ''){\n      sortedData = sortedData.filter(({email})=> new RegExp(searchText, 'g').test(email))\n  }\n\n  switch (sortBy) {\n    case \"Name\":\n        sortedData = sortedData.sort((a, b) => {\n            const aName = `${a.name.first} ${a.name.last}`;\n            const bName = `${b.name.first} ${b.name.last}`;\n            return aName.localeCompare(bName)\n        })\n      break;\n\n    case \"Email\":\n        sortedData = sortedData.sort((a, b) => a.email.localeCompare(b.email))\n      break;\n\n    case \"Phone\":\n        sortedData = sortedData.sort((a, b) => a.phone.localeCompare(b.phone))\n      break;\n\n    default:\n      break;\n  }\n\n  return (\n    <TableContext.Provider value={tableContext}>\n      <EventContext.Provider value={eventContext}>\n        <table border={1}>\n          <thread>\n            <tr>\n              <TableHeader\n                text=\"Name\"\n                // sort={}\n              />\n              <TableHeader text=\"Email\" />\n              <TableHeader text=\"Phone\" />\n            </tr>\n          </thread>\n          <tbody>\n            <tr>\n              {sortedData.map((person) => (\n                <TableRow key={person.phone} person={person} />\n              ))}\n            </tr>\n          </tbody>\n        </table>\n      </EventContext.Provider>\n    </TableContext.Provider>\n  );\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}